@model CHE.Web.ViewModels.PaginationViewModel
@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="row paging justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item">
                <button type="submit" class="btn btn-default @prevDisabled"
                        asp-controller="@Model.Controller" asp-action="All"
                        asp-route-pageIndex="@(Model.PageIndex - 1)">
                    Previous
                </button>
            </li>
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <button type="submit" class="btn page-link"
                        asp-controller="@Model.Controller" asp-action="All"
                        asp-route-pageIndex="@(Model.PageIndex - 1)">
                        @(Model.PageIndex - 1)
                    </button>
                </li>
            }
            <li class="page-item active">
                <span class="page-link">
                    @Model.PageIndex
                </span>
            </li>
            @if (Model.HasNextPage)
            {
            <li class="page-item">
                <button type="submit" class="btn page-link"
                    asp-controller="@Model.Controller" asp-action="All"
                    asp-route-pageIndex="@(Model.PageIndex + 1)">
                    @(Model.PageIndex + 1)
                </button>
            </li>
            }
            <li class="page-item">
                <button type="submit" class="btn btn-default @nextDisabled"
                        asp-controller="@Model.Controller" asp-action="All"
                        asp-route-pageIndex="@(Model.PageIndex + 1)">
                    Next
                </button>
            </li>
        </ul>
    </nav>
</div>